apiVersion: karpenter.sh/v1beta1
kind: NodePool
metadata:
  name: spot
  annotations:
    kubernetes.io/description: "NodePool for provisioning spot capacity"
spec:
  template:
    metadata:
      labels:
        usage: dev_node_general_node
        role: "${project_name}_general_node"
    spec:
      requirements:
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["spot", "on-demand"]
        - key: kubernetes.io/arch
          operator: In
          values: ["amd64"]
        - key: "node.kubernetes.io/instance-type"
          operator: In
          values: ["m5a.xlarge","m6g.xlarge","m7g.xlarge","m6a.xlarge"]
        - key: "topology.kubernetes.io/zone"
          operator: In
          values: ["us-east-1a", "us-east-1b", "us-east-1c"]
      nodeClassRef:
        apiVersion: karpenter.k8s.aws/v1beta1
        kind: EC2NodeClass
        name: default
  disruption:
    consolidationPolicy: WhenUnderutilized
    expireAfter: 48h
  limits:
    cpu: "20"
    memory: "100Gi"
---

apiVersion: karpenter.k8s.aws/v1beta1
kind: EC2NodeClass
metadata:
  name: default
spec:
  amiFamily: AL2
  role: "${project_name}-AmazonEKSKarpenterControllerRole"
  instanceProfile: "${aws_iam_instance_profile}"
  blockDeviceMappings:
    - deviceName: /dev/xvda
      ebs:
        volumeType: gp3
        volumeSize: 20Gi
        encrypted: true
        deleteOnTermination: true
  subnetSelectorTerms:
    - id: "${public_subnet_a1}"
    - id: "${public_subnet_a2}"
    - id: "${public_subnet_a3}"
  securityGroupSelectorTerms:
    - id: "${securitygroup}" 
  ami:
    - id: "ami-0b81e59d8a7914d21"
